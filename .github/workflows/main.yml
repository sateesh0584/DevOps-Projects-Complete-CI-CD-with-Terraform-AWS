deploy-app:
  runs-on: ubuntu-latest
  needs: deploy-infra
  steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set IP Environment Variable
      run: echo "SERVER_PUBLIC_IP=${{ needs.deploy-infra.outputs.SERVER_PUBLIC_IP }}" >> $GITHUB_ENV

    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Debug Environment Variables
      run: |
        echo "REGISTRY=${{ steps.login-ecr.outputs.registry }}"
        echo "REPOSITORY=example-node-app"
        echo "IMAGE_TAG=${{ github.sha }}"

    - name: Build and Push Docker Image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: example-node-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo "Building Docker image: $REGISTRY/$REPOSITORY:$IMAGE_TAG"
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      working-directory: ./nodeapp

    - name: Deploy Docker Image to EC2
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: example-node-app
        IMAGE_TAG: ${{ github.sha }}
        AWS_DEFAULT_REGION: us-east-1
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SERVER_PUBLIC_IP }}
        username: ubuntu
        key: ${{ env.PRIVATE_SSH_KEY }}
        port: 22
        script: |
          echo "Deploying Docker image: $REGISTRY/$REPOSITORY:$IMAGE_TAG"
          sudo usermod -aG docker $USER  # Add current user to docker group
          newgrp docker  # Refresh group membership
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REGISTRY
          docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker run -d --name myappcontainer -p 80:8080 $REGISTRY/$REPOSITORY:$IMAGE_TAG
